public class Date {

    public static void main(String[] args) {
        Date date1 = new Date(2, 18, 2024);
        Date date2 = new Date(3, 1, 2024);

        System.out.println("Date 1: " + date1);
        System.out.println("Date 2: " + date2);

        System.out.println("Is date1 before date2? " + date1.before(date2));
        System.out.println("Days since beginning of year for date1: " + date1.daysSinceBeginYear());
        System.out.println("Days until end of year for date1: " + date1.daysUntilEndYear());
        System.out.println("Days between date1 and date2: " + date1.daysBetween(date2));
    }

 	
    private int month;
    private int day;
    private int year;

    public Date(int month, int day, int year) {
        this.month = month;
        this.day = day;
        this.year = year;
    }

    public int month() {
        return month;
    }

    public int day() {
        return day;
    }

    public int year() {
        return year;
    }

    public String toString() {
        return month + "/" + day + "/" + year;
    }

    public boolean before(Date other) {
        if (this.year != other.year) {
            return this.year < other.year;
        } else if (this.month != other.month) {
            return this.month < other.month;
        } else {
            return this.day < other.day;
        }
    }

    public int daysSinceBeginYear() {
        int days = day;
        int[] daysInMonth = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        for (int i = 0; i < month - 1; i++) {
            days += daysInMonth[i];
        }
        if (leapYear() && month > 2) {
            days++;
        }
        return days;
    }

    public int daysUntilEndYear() {
        return totalDaysInYear() - daysSinceBeginYear();
    }

    public int daysBetween(Date other) {
        return other.daysSinceBeginYear() - this.daysSinceBeginYear();
    }

    private boolean leapYear() {
        if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
            return true;
        } else {
            return false;
        }
    }

    private int totalDaysInYear() {
        return leapYear() ? 366 : 365;
    }
}
